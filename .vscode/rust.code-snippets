{
	// Place your atcoder_rust ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"derive_all": {
		"scope": "rust",
		"prefix": "derive_all",
		"body": [
			"#[derive(Clone, Copy, Debug, PartialEq, Eq)]"
		],
		"description": "#[derive(Clone, Copy, Debug, PartialEq, Eq)]"
	},
	"modint998": {
		"scope": "rust",
		"prefix": "modint998",
		"body": [
			"use ac_library::ModInt998244353 as Mint;"
		],
		"description": "use ac_library::ModInt998244353 as Mint;"
	},
	"cfg_debug": {
		"scope": "rust",
		"prefix": "cfg_debug",
		"body": [
			"if cfg!(debug_assertions){",
			"    $1",
			"}"
		],
		"description": "if cfg!(debug_assertions)"
	},
	"closure": {
		"scope": "rust",
		"prefix": "cl",
		"body": [
			"|$1|{$2}"
		],
		"description": "closure"
	},
	"print_option": {
		"scope": "rust",
		"prefix": "print_option",
		"body": [
			"if let Some(ans) = $1 {",
			"    $2",
			"} else {",
			"    println!(\"-1\");",
			"}",
		],
		"description": "closure"
	}
}
